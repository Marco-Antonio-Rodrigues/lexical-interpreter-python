OBS: Tipagem dinâmica e estática, programação estruturada.

# REGRAS DE TRANSIÇÕES
<Exp> ::= <Term> ((PLUS | MINUS) <Term>)*
<RelExp> ::= <Term> ((LT | GT | LEQ | GEQ | EQ | NEQ) <Term>)*
<Term> ::= <Factor> ((MUL | DIV) <Factor>)*
<Factor> ::= (PLUS | MINUS)* <Atom> | <Atom>
<FUNC> ::= <ID> LPAR <ExpSequence> RPAR (LBRACE <StmtList> RBRACE)*
<Atom> ::= INT | FLOAT | LPAR <Exp> RPAR | <ID> | <FUNC> | LSQUARE <ExpSequence> RSQUARE | LPAR <ExpSequence> RPAR
<ExpSequence> ::= <Exp> (COMMA <Exp>)*
<Stmt> ::= <ID> ASSIGN <Exp> SEMICOLON?
<Stmt> ::= IF LPAR <RelExp> RPAR LBRACE <StmtList> RBRACE (ELSE LBRACE <StmtList> RBRACE)? SEMICOLON?
<StmtList> ::= <Stmt>+
<ID> ::= [a-zA-Z_][a-zA-Z0-9_]*


# TERMINAIS
PLUS é o +
MUL é o *
DIV é o /   
MINUS é o -
POW é o ^
LPAR é o (
RPAR é o )
ASSIGN é o =
LSQUARE é o [
RSQUARE é o ]
COMMA é o ,
SEMICOLON é o ;
LT é o <
GT é o > 
LEQ é o >=
GEQ é o <= 
EQ é o == 
NEQ é o != 
LBRACE é o {
RBRACE é o }
IF é o if
ELSE é o else

# TIPO
INT é um inteiro qualquer
FLOAT é um float qualquer
ID é qualquer identificador
STRING algo entre aspas
NULL é algo vazio
FUNC é função